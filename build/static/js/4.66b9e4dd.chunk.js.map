{"version":3,"sources":["pages/YT.tsx"],"names":["YT","value","useState","type","iframe","newAmb","setNewAmb","useEffect","fetch","then","response","json","data","reverse","console","log","toString","className","loading","src","title","frameBorder","allow","allowFullScreen"],"mappings":"yHA+BeA,UA9BL,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAER,EAAaC,qBAARC,EAAL,oBACA,EAA0BD,mBAAgB,CACtC,CACRE,OAAO,6CAEC,CACIA,OAAO,+CALf,mBAAKC,EAAL,KAAaC,EAAb,KAoBA,OAZAC,qBAAU,WAINC,MAHyB,+CAIpBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFN,EAAUM,EAAKC,WACfC,QAAQC,IAAIH,GACZE,QAAQC,IAAIV,EAAO,GAAGD,OAAOY,iBAEvC,CAACb,IAEH,mCACC,wBAAQc,UAAU,SAAUC,QAAQ,OAAOC,IAAKd,EAAOJ,GAAOG,OAAQgB,MAAM,uBAAuBC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe","file":"static/js/4.66b9e4dd.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\r\nconst YT =({value}:{value:number})=>{\r\n    \r\n    let [type] = useState();\r\n    let [newAmb, setNewAmb] = useState<any[]>([\r\n        {\r\niframe:\"https://www.youtube.com/embed/y8EvClrhZVc\"\r\n        },\r\n        {\r\n            iframe:\"https://www.youtube.com/embed/E5LclqEUKO0\"\r\n        }\r\n    ]);\r\n    useEffect(()=>{\r\n        const apisounds:string = 'https://apiforsa.herokuapp.com/read/onlyAMB';\r\n                \r\n            \r\n        fetch(apisounds)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setNewAmb(data.reverse())\r\n                console.log(data);\r\n                console.log(newAmb[0].iframe.toString())\r\n            });\r\n    },[type]);\r\n    return(\r\n    <>\r\n     <iframe className=\"iframe\"  loading=\"lazy\" src={newAmb[value].iframe} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            \r\n    </>\r\n    )\r\n}\r\nexport default YT;"],"sourceRoot":""}